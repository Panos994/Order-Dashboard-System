{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      username: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await axios.post('http://localhost:9090/api/auth/signin', {\n          username: this.username,\n          password: this.password\n        });\n        const {\n          accessToken,\n          roles\n        } = response.data;\n        const userRole = roles[0] || ''; // Ensure it's not undefined\n\n        // Store values correctly\n        localStorage.setItem('username', this.username);\n        localStorage.setItem('token', accessToken); // Fix: Ensure it's 'token'\n        localStorage.setItem('userRole', userRole);\n\n        // Redirect based on role\n        if (userRole === 'ROLE_ADMIN') {\n          this.$router.push({\n            name: 'AdminPage'\n          });\n        } else if (userRole === 'ROLE_USER') {\n          this.$router.push({\n            name: 'MainPage'\n          });\n        } else {\n          this.errorMessage = 'Unknown role. Contact support.';\n        }\n      } catch (error) {\n        this.errorMessage = 'Invalid login credentials';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","username","password","errorMessage","methods","login","response","post","accessToken","roles","userRole","localStorage","setItem","$router","push","error"],"sources":["/home/it2021154/Desktop/QNR_OrderSystem/order-system-frontend/src/components/LoginPage.vue"],"sourcesContent":["<template>\n  <div class=\"auth-form\">\n    <div class=\"form-container\">\n      <h2>Login</h2>\n      <form @submit.prevent=\"login\">\n        <div class=\"input-group\">\n          <label for=\"username\">Username</label>\n          <input type=\"text\" v-model=\"username\" required />\n        </div>\n\n        <div class=\"input-group\">\n          <label for=\"password\">Password</label>\n          <input type=\"password\" v-model=\"password\" required />\n        </div>\n\n        <button type=\"submit\" class=\"login-btn\">Login</button>\n      </form>\n\n      <p class=\"signup-link\">\n        Don't have an account?\n        <router-link to=\"/signup\">Sign up here</router-link>\n      </p>\n\n      <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      username: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await axios.post('http://localhost:9090/api/auth/signin', {\n          username: this.username,\n          password: this.password\n        });\n\n        const { accessToken, roles } = response.data;\n        const userRole = roles[0] || ''; // Ensure it's not undefined\n\n        // Store values correctly\n        localStorage.setItem('username', this.username);\n        localStorage.setItem('token', accessToken); // Fix: Ensure it's 'token'\n        localStorage.setItem('userRole', userRole);\n\n        // Redirect based on role\n        if (userRole === 'ROLE_ADMIN') {\n          this.$router.push({ name: 'AdminPage' });\n        } else if (userRole === 'ROLE_USER') {\n          this.$router.push({ name: 'MainPage' });\n        } else {\n          this.errorMessage = 'Unknown role. Contact support.';\n        }\n      } catch (error) {\n        this.errorMessage = 'Invalid login credentials';\n      }\n    }\n  }\n};\n</script>\n"],"mappings":";AA6BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,IAAI,CAAC,uCAAuC,EAAE;UACzEN,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QAEF,MAAM;UAAEM,WAAW;UAAEC;QAAM,IAAIH,QAAQ,CAACN,IAAI;QAC5C,MAAMU,QAAO,GAAID,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;;QAEjC;QACAE,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,IAAI,CAACX,QAAQ,CAAC;QAC/CU,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,WAAW,CAAC,EAAE;QAC5CG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,QAAQ,CAAC;;QAE1C;QACA,IAAIA,QAAO,KAAM,YAAY,EAAE;UAC7B,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC;YAAEf,IAAI,EAAE;UAAY,CAAC,CAAC;QAC1C,OAAO,IAAIW,QAAO,KAAM,WAAW,EAAE;UACnC,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC;YAAEf,IAAI,EAAE;UAAW,CAAC,CAAC;QACzC,OAAO;UACL,IAAI,CAACI,YAAW,GAAI,gCAAgC;QACtD;MACF,EAAE,OAAOY,KAAK,EAAE;QACd,IAAI,CAACZ,YAAW,GAAI,2BAA2B;MACjD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}