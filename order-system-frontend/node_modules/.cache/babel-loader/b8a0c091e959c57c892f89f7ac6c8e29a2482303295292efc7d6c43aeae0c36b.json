{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { createRouter, createWebHistory } from 'vue-router'; // Import necessary functions from Vue Router 4\nimport LoginPage from './components/LoginPage.vue';\nimport SignUpPage from './components/SignUpPage.vue';\nimport MainPage from './components/MainPage.vue';\n\n// Define the routes\nconst routes = [{\n  path: '/',\n  name: 'login',\n  component: LoginPage\n}, {\n  path: '/signup',\n  name: 'signup',\n  component: SignUpPage\n}, {\n  path: '/main',\n  name: 'main',\n  component: MainPage,\n  meta: {\n    requiresAuth: true\n  } // To require authentication for MainPage\n}];\n\n// Create the router instance\nconst router = createRouter({\n  history: createWebHistory(),\n  // Use history mode for clean URLs\n  routes\n});\n\n// Global route guard to check if the user is authenticated\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token');\n  if (to.matched.some(record => record.meta.requiresAuth) && !token) {\n    next({\n      name: 'login'\n    }); // Redirect to login if not authenticated\n  } else {\n    next(); // Proceed to the route\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","LoginPage","SignUpPage","MainPage","routes","path","name","component","meta","requiresAuth","router","history","beforeEach","to","from","next","token","localStorage","getItem","matched","some","record"],"sources":["/home/it2021154/Desktop/QNR_OrderSystem/order-system-frontend/src/router.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';  // Import necessary functions from Vue Router 4\nimport LoginPage from './components/LoginPage.vue';\nimport SignUpPage from './components/SignUpPage.vue';\nimport MainPage from './components/MainPage.vue';\n\n// Define the routes\nconst routes = [\n    {\n        path: '/',\n        name: 'login',\n        component: LoginPage,\n    },\n    {\n        path: '/signup',\n        name: 'signup',\n        component: SignUpPage,\n    },\n    {\n        path: '/main',\n        name: 'main',\n        component: MainPage,\n        meta: { requiresAuth: true },  // To require authentication for MainPage\n    },\n];\n\n// Create the router instance\nconst router = createRouter({\n    history: createWebHistory(),  // Use history mode for clean URLs\n    routes,\n});\n\n// Global route guard to check if the user is authenticated\nrouter.beforeEach((to, from, next) => {\n    const token = localStorage.getItem('token');\n    if (to.matched.some(record => record.meta.requiresAuth) && !token) {\n        next({ name: 'login' });  // Redirect to login if not authenticated\n    } else {\n        next();  // Proceed to the route\n    }\n});\n\nexport default router;\n"],"mappings":";;AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY,CAAC,CAAE;AAC9D,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,QAAQ,MAAM,2BAA2B;;AAEhD;AACA,MAAMC,MAAM,GAAG,CACX;EACIC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEN;AACf,CAAC,EACD;EACII,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEL;AACf,CAAC,EACD;EACIG,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEJ,QAAQ;EACnBK,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAG;AACnC,CAAC,CACJ;;AAED;AACA,MAAMC,MAAM,GAAGX,YAAY,CAAC;EACxBY,OAAO,EAAEX,gBAAgB,CAAC,CAAC;EAAG;EAC9BI;AACJ,CAAC,CAAC;;AAEF;AACAM,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIL,EAAE,CAACM,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACb,IAAI,CAACC,YAAY,CAAC,IAAI,CAACO,KAAK,EAAE;IAC/DD,IAAI,CAAC;MAAET,IAAI,EAAE;IAAQ,CAAC,CAAC,CAAC,CAAE;EAC9B,CAAC,MAAM;IACHS,IAAI,CAAC,CAAC,CAAC,CAAE;EACb;AACJ,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}