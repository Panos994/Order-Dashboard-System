{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport { createRouter, createWebHistory } from 'vue-router';\nimport axios from 'axios';\n\n// Import components\nimport LoginPage from './components/LoginPage.vue';\nimport SignUpPage from './components/SignUpPage.vue';\nimport MainPage from './components/MainPage.vue';\n\n// Set base URL for Axios\naxios.defaults.baseURL = 'http://localhost:9090'; // Change the base URL as needed\n\n// Define routes\nconst routes = [{\n  path: '/',\n  name: 'MainPage',\n  component: MainPage\n}, {\n  path: '/login',\n  name: 'LoginPage',\n  component: LoginPage\n}, {\n  path: '/signup',\n  name: 'SignUpPage',\n  component: SignUpPage\n}];\n\n// Create router instance\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  // Use the browser history mode\n  routes\n});\n\n// Create Vue app instance\nconst app = createApp(App);\napp.use(router);\n\n// Mount the app\napp.mount('#app');\n\n// Add navigation guard\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = !!localStorage.getItem('authToken'); // Check if user is authenticated\n\n  // Redirect to login if the user is not authenticated and trying to access restricted pages\n  if ((to.name === 'MainPage' || to.name === 'SignUpPage') && !isAuthenticated) {\n    next({\n      name: 'LoginPage'\n    }); // Redirect to login if not authenticated\n  } else {\n    next(); // Proceed if authenticated\n  }\n});","map":{"version":3,"names":["createApp","App","createRouter","createWebHistory","axios","LoginPage","SignUpPage","MainPage","defaults","baseURL","routes","path","name","component","router","history","process","env","BASE_URL","app","use","mount","beforeEach","to","from","next","isAuthenticated","localStorage","getItem"],"sources":["/home/it2021154/Desktop/QNR_OrderSystem/order-system-frontend/src/main.js"],"sourcesContent":["import { createApp } from 'vue';\nimport App from './App.vue';\nimport { createRouter, createWebHistory } from 'vue-router';\nimport axios from 'axios';\n\n// Import components\nimport LoginPage from './components/LoginPage.vue';\nimport SignUpPage from './components/SignUpPage.vue';\nimport MainPage from './components/MainPage.vue';\n\n// Set base URL for Axios\naxios.defaults.baseURL = 'http://localhost:9090';  // Change the base URL as needed\n\n// Define routes\nconst routes = [\n    { path: '/', name: 'MainPage', component: MainPage },\n    { path: '/login', name: 'LoginPage', component: LoginPage },\n    { path: '/signup', name: 'SignUpPage', component: SignUpPage }\n];\n\n// Create router instance\nconst router = createRouter({\n    history: createWebHistory(process.env.BASE_URL), // Use the browser history mode\n    routes\n});\n\n// Create Vue app instance\nconst app = createApp(App);\napp.use(router);\n\n// Mount the app\napp.mount('#app');\n\n// Add navigation guard\nrouter.beforeEach((to, from, next) => {\n    const isAuthenticated = !!localStorage.getItem('authToken'); // Check if user is authenticated\n\n    // Redirect to login if the user is not authenticated and trying to access restricted pages\n    if ((to.name === 'MainPage' || to.name === 'SignUpPage') && !isAuthenticated) {\n        next({ name: 'LoginPage' }); // Redirect to login if not authenticated\n    } else {\n        next(); // Proceed if authenticated\n    }\n});\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,SAASC,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,QAAQ,MAAM,2BAA2B;;AAEhD;AACAH,KAAK,CAACI,QAAQ,CAACC,OAAO,GAAG,uBAAuB,CAAC,CAAE;;AAEnD;AACA,MAAMC,MAAM,GAAG,CACX;EAAEC,IAAI,EAAE,GAAG;EAAEC,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEN;AAAS,CAAC,EACpD;EAAEI,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAER;AAAU,CAAC,EAC3D;EAAEM,IAAI,EAAE,SAAS;EAAEC,IAAI,EAAE,YAAY;EAAEC,SAAS,EAAEP;AAAW,CAAC,CACjE;;AAED;AACA,MAAMQ,MAAM,GAAGZ,YAAY,CAAC;EACxBa,OAAO,EAAEZ,gBAAgB,CAACa,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAAE;EACjDR;AACJ,CAAC,CAAC;;AAEF;AACA,MAAMS,GAAG,GAAGnB,SAAS,CAACC,GAAG,CAAC;AAC1BkB,GAAG,CAACC,GAAG,CAACN,MAAM,CAAC;;AAEf;AACAK,GAAG,CAACE,KAAK,CAAC,MAAM,CAAC;;AAEjB;AACAP,MAAM,CAACQ,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClC,MAAMC,eAAe,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;;EAE7D;EACA,IAAI,CAACL,EAAE,CAACX,IAAI,KAAK,UAAU,IAAIW,EAAE,CAACX,IAAI,KAAK,YAAY,KAAK,CAACc,eAAe,EAAE;IAC1ED,IAAI,CAAC;MAAEb,IAAI,EAAE;IAAY,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC,MAAM;IACHa,IAAI,CAAC,CAAC,CAAC,CAAC;EACZ;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}